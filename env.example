# Trust Engine Environment Configuration Template
# Copy this file to .env and fill in your actual values

# ==========================================
# Flask Application Configuration
# ==========================================
DEBUG=true
SECRET_KEY=your-secret-key-change-in-production-make-it-very-long-and-random

# ==========================================
# HTTPS/SSL Configuration
# ==========================================
FLASK_USE_SSL=true
FLASK_SSL_CERT=docker/ssl/certs/trust-engine-cert.pem
FLASK_SSL_KEY=docker/ssl/private/trust-engine-key.pem

# ==========================================
# Supabase Configuration (REQUIRED)
# ==========================================
# Get these from your Supabase project dashboard
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_API_KEY=your-supabase-anon-key-here

# ==========================================
# Okta Configuration (REQUIRED)
# ==========================================
# Get these from your Okta Developer Console
OKTA_ISSUER=https://your-domain.okta.com/oauth2/default
OKTA_CLIENT_ID=your-okta-client-id-here
OKTA_CLIENT_SECRET=your-okta-client-secret-here
OKTA_REDIRECT_URI=https://localhost:5001/authorization-code/callback
OKTA_AUDIENCE=api://default

# ==========================================
# Elasticsearch Configuration (HTTPS)
# ==========================================
# These are auto-configured for Docker deployment
ELASTICSEARCH_URL=https://elasticsearch:9200
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=trust-engine-elastic-password
ELASTICSEARCH_SSL_VERIFY=false
ELASTICSEARCH_CA_CERT=docker/ssl/ca/ca-cert.pem

# ==========================================
# Wazuh Configuration (HTTPS)
# ==========================================
# These are auto-configured for Docker deployment
WAZUH_API_URL=https://wazuh-manager:55000
WAZUH_API_USERNAME=wazuh-wui
WAZUH_API_PASSWORD=MyS3cr37P450r.*-
WAZUH_SSL_VERIFY=false

# ==========================================
# Optional: External URLs for Production
# ==========================================
# Uncomment and configure these for production deployment
# ELASTICSEARCH_URL=https://your-elasticsearch.domain.com:9200
# WAZUH_API_URL=https://your-wazuh.domain.com:55000
# OKTA_REDIRECT_URI=https://your-domain.com:5001/authorization-code/callback

# ==========================================
# Security Notes
# ==========================================
# 1. Never commit this file with real credentials to version control
# 2. Use strong, unique passwords for production
# 3. For production, set ELASTICSEARCH_SSL_VERIFY=true and WAZUH_SSL_VERIFY=true
# 4. Change default Elasticsearch and Wazuh passwords in production
# 5. Use proper SSL certificates from a trusted CA in production
# 6. Regularly rotate all credentials and certificates

# ==========================================
# Setup Instructions
# ==========================================
# 1. Copy this file: cp env.example .env
# 2. Edit .env with your actual credentials
# 3. Generate SSL certificates: cd docker/ssl && ./generate_certificates.sh
# 4. Start services: ./setup_trust_engine.sh
# 5. Access at: https://localhost:5001

# ==========================================
# Getting Credentials
# ==========================================
# Supabase:
#   1. Sign up at https://supabase.com
#   2. Create a new project
#   3. Go to Settings > API
#   4. Copy the URL and anon/public key
#
# Okta:
#   1. Sign up at https://developer.okta.com
#   2. Create a new application (Web Application)
#   3. Set redirect URI to: https://localhost:5001/authorization-code/callback
#   4. Copy the Client ID and Client Secret
#   5. Note your Okta domain for the issuer URL
