{
  "timestamp": "2025-07-28T22:45:55.561082",
  "test_summary": {
    "total_tests": 7,
    "passed_tests": 7,
    "failed_tests": 0,
    "success_rate_percent": 100.0
  },
  "test_results": {
    "data_loading": {
      "status": "passed",
      "samples": 1000,
      "features": 70,
      "missing_values": "0",
      "label_distribution": {
        "BENIGN": 779,
        "MALICIOUS": 221
      }
    },
    "ml_training": {
      "status": "passed",
      "training_time_seconds": 568.1833078861237,
      "trained_models": [
        "RandomForest",
        "KNN",
        "NaiveBayes",
        "MLP",
        "AdaptiveKNN",
        "AdaptiveRandomForest"
      ],
      "missing_models": [],
      "training_results": {
        "RandomForest": {
          "accuracy": 0.78,
          "precision": 0.6084,
          "recall": 0.78,
          "f1_score": 0.6835955056179777,
          "confusion_matrix": [
            [
              0,
              44
            ],
            [
              0,
              156
            ]
          ],
          "classification_report": "              precision    recall  f1-score   support\n\n           5       0.00      0.00      0.00        44\n          10       0.78      1.00      0.88       156\n\n    accuracy                           0.78       200\n   macro avg       0.39      0.50      0.44       200\nweighted avg       0.61      0.78      0.68       200\n",
          "false_negative_rate": 0.5,
          "roc_auc": 0,
          "training_time": 0.316316,
          "model_name": "RandomForest",
          "cv_mean": 0.7787499999999999,
          "cv_std": 0.003061862178478962
        },
        "KNN": {
          "accuracy": 0.775,
          "precision": 0.7300867888138862,
          "recall": 0.775,
          "f1_score": 0.7341650950239373,
          "confusion_matrix": [
            [
              8,
              36
            ],
            [
              9,
              147
            ]
          ],
          "classification_report": "              precision    recall  f1-score   support\n\n           5       0.47      0.18      0.26        44\n          10       0.80      0.94      0.87       156\n\n    accuracy                           0.78       200\n   macro avg       0.64      0.56      0.56       200\nweighted avg       0.73      0.78      0.73       200\n",
          "false_negative_rate": 0.43793706293706297,
          "roc_auc": 0,
          "training_time": 0.082983,
          "model_name": "KNN",
          "cv_mean": 0.7224999999999999,
          "cv_std": 0.012247448713915886
        },
        "NaiveBayes": {
          "accuracy": 0.775,
          "precision": 0.607537688442211,
          "recall": 0.775,
          "f1_score": 0.6811267605633802,
          "confusion_matrix": [
            [
              0,
              44
            ],
            [
              1,
              155
            ]
          ],
          "classification_report": "              precision    recall  f1-score   support\n\n           5       0.00      0.00      0.00        44\n          10       0.78      0.99      0.87       156\n\n    accuracy                           0.78       200\n   macro avg       0.39      0.50      0.44       200\nweighted avg       0.61      0.78      0.68       200\n",
          "false_negative_rate": 0.5032051282051282,
          "roc_auc": 0,
          "training_time": 0.004592,
          "model_name": "NaiveBayes",
          "cv_mean": 0.77625,
          "cv_std": 0.008291561975888507
        },
        "MLP": {
          "accuracy": 0.68,
          "precision": 0.6377254901960785,
          "recall": 0.68,
          "f1_score": 0.6566008953739015,
          "confusion_matrix": [
            [
              5,
              39
            ],
            [
              25,
              131
            ]
          ],
          "classification_report": "              precision    recall  f1-score   support\n\n           5       0.17      0.11      0.14        44\n          10       0.77      0.84      0.80       156\n\n    accuracy                           0.68       200\n   macro avg       0.47      0.48      0.47       200\nweighted avg       0.64      0.68      0.66       200\n",
          "false_negative_rate": 0.5233100233100233,
          "roc_auc": 0,
          "training_time": 0.80104,
          "model_name": "MLP",
          "cv_mean": 0.7124999999999999,
          "cv_std": 0.012499999999999989
        },
        "AdaptiveKNN": {
          "accuracy": 0.76,
          "precision": 0.6873758865248227,
          "recall": 0.76,
          "f1_score": 0.7025913621262458,
          "confusion_matrix": [
            [
              4,
              40
            ],
            [
              8,
              148
            ]
          ],
          "classification_report": "              precision    recall  f1-score   support\n\n           5       0.33      0.09      0.14        44\n          10       0.79      0.95      0.86       156\n\n    accuracy                           0.76       200\n   macro avg       0.56      0.52      0.50       200\nweighted avg       0.69      0.76      0.70       200\n",
          "false_negative_rate": 0.4801864801864802,
          "roc_auc": 0,
          "training_time": 6.029115,
          "model_name": "AdaptiveKNN",
          "cv_mean": 0.6848631986812815,
          "cv_std": 0.010006837884884297
        },
        "AdaptiveRandomForest": {
          "accuracy": 0.78,
          "precision": 0.6084,
          "recall": 0.78,
          "f1_score": 0.6835955056179777,
          "confusion_matrix": [
            [
              0,
              44
            ],
            [
              0,
              156
            ]
          ],
          "classification_report": "              precision    recall  f1-score   support\n\n           5       0.00      0.00      0.00        44\n          10       0.78      1.00      0.88       156\n\n    accuracy                           0.78       200\n   macro avg       0.39      0.50      0.44       200\nweighted avg       0.61      0.78      0.68       200\n",
          "false_negative_rate": 0.5,
          "roc_auc": 0,
          "training_time": 108.095594,
          "model_name": "AdaptiveRandomForest",
          "cv_mean": 0.6800358224606458,
          "cv_std": 0.004207148876424261
        }
      }
    },
    "predictions": {
      "status": "passed",
      "predictions": {
        "RandomForest": {
          "trust_score": 10.0,
          "confidence": 0.8488257848047551,
          "mfa_required": "False",
          "access_decision": "ALLOW",
          "authentication_latency_ms": 72.932,
          "model_used": "RandomForest",
          "timestamp": "2025-07-28T22:43:45.572189",
          "stride_risk_level": "LOW_RISK"
        },
        "KNN": {
          "trust_score": 10.0,
          "confidence": 1.0,
          "mfa_required": "False",
          "access_decision": "ALLOW",
          "authentication_latency_ms": 9.962,
          "model_used": "KNN",
          "timestamp": "2025-07-28T22:43:45.583142",
          "stride_risk_level": "LOW_RISK"
        },
        "NaiveBayes": {
          "trust_score": 10.0,
          "confidence": 0.8284301580979324,
          "mfa_required": "False",
          "access_decision": "ALLOW",
          "authentication_latency_ms": 3.879,
          "model_used": "NaiveBayes",
          "timestamp": "2025-07-28T22:43:45.587151",
          "stride_risk_level": "LOW_RISK"
        },
        "MLP": {
          "trust_score": 10.0,
          "confidence": 0.9962499947865404,
          "mfa_required": "False",
          "access_decision": "ALLOW",
          "authentication_latency_ms": 1.991,
          "model_used": "MLP",
          "timestamp": "2025-07-28T22:43:45.589641",
          "stride_risk_level": "LOW_RISK"
        },
        "AdaptiveKNN": {
          "trust_score": 10.0,
          "confidence": 0.8571428571428571,
          "mfa_required": "False",
          "access_decision": "ALLOW",
          "authentication_latency_ms": 1.685,
          "model_used": "AdaptiveKNN",
          "timestamp": "2025-07-28T22:43:45.591704",
          "stride_risk_level": "LOW_RISK"
        },
        "AdaptiveRandomForest": {
          "trust_score": 10.0,
          "confidence": 0.8521709143405254,
          "mfa_required": "False",
          "access_decision": "ALLOW",
          "authentication_latency_ms": 15.911999999999999,
          "model_used": "AdaptiveRandomForest",
          "timestamp": "2025-07-28T22:43:45.607723",
          "stride_risk_level": "LOW_RISK"
        }
      },
      "prediction_times_ms": {
        "RandomForest": 73.22382926940918,
        "KNN": 10.853052139282227,
        "NaiveBayes": 3.9610862731933594,
        "MLP": 2.439260482788086,
        "AdaptiveKNN": 2.017974853515625,
        "AdaptiveRandomForest": 15.97905158996582
      },
      "average_prediction_time_ms": 18.079042434692383
    },
    "evaluation": {
      "status": "passed",
      "evaluation_results": {
        "RandomForest": {
          "error": "Labels in y_true and y_pred should be of the same type. Got y_true=['BENIGN' 'MALICIOUS'] and y_pred=[ 5 10]. Make sure that the predictions provided by the classifier coincides with the true labels.",
          "accuracy": 0,
          "precision": 0,
          "recall": 0,
          "f1_score": 0,
          "auc": 0
        },
        "KNN": {
          "error": "Labels in y_true and y_pred should be of the same type. Got y_true=['BENIGN' 'MALICIOUS'] and y_pred=[ 5 10]. Make sure that the predictions provided by the classifier coincides with the true labels.",
          "accuracy": 0,
          "precision": 0,
          "recall": 0,
          "f1_score": 0,
          "auc": 0
        },
        "NaiveBayes": {
          "error": "Labels in y_true and y_pred should be of the same type. Got y_true=['BENIGN' 'MALICIOUS'] and y_pred=[ 5 10]. Make sure that the predictions provided by the classifier coincides with the true labels.",
          "accuracy": 0,
          "precision": 0,
          "recall": 0,
          "f1_score": 0,
          "auc": 0
        },
        "MLP": {
          "error": "Labels in y_true and y_pred should be of the same type. Got y_true=['BENIGN' 'MALICIOUS'] and y_pred=[10]. Make sure that the predictions provided by the classifier coincides with the true labels.",
          "accuracy": 0,
          "precision": 0,
          "recall": 0,
          "f1_score": 0,
          "auc": 0
        },
        "AdaptiveKNN": {
          "error": "Labels in y_true and y_pred should be of the same type. Got y_true=['BENIGN' 'MALICIOUS'] and y_pred=[10]. Make sure that the predictions provided by the classifier coincides with the true labels.",
          "accuracy": 0,
          "precision": 0,
          "recall": 0,
          "f1_score": 0,
          "auc": 0
        },
        "AdaptiveRandomForest": {
          "error": "Labels in y_true and y_pred should be of the same type. Got y_true=['BENIGN' 'MALICIOUS'] and y_pred=[ 5 10]. Make sure that the predictions provided by the classifier coincides with the true labels.",
          "accuracy": 0,
          "precision": 0,
          "recall": 0,
          "f1_score": 0,
          "auc": 0
        }
      },
      "best_model": null,
      "best_f1_score": 0
    },
    "visualizations": {
      "status": "passed",
      "visualization_results": {
        "confusion_matrix": "generated",
        "roc_curves": "generated",
        "feature_importance": "generated",
        "performance_comparison": "generated"
      },
      "successful_charts": 4,
      "total_charts": 4
    },
    "api_endpoints": {
      "status": "passed",
      "api_tests": {
        "health": "passed",
        "status": "passed",
        "training": "failed: HTTPConnectionPool(host='localhost', port=5001): Read timed out. (read timeout=120)"
      },
      "successful_tests": 2,
      "total_tests": 3
    },
    "benchmarks": {
      "status": "passed",
      "benchmark_results": {
        "RandomForest": {
          "throughput_sessions_per_second": 16368.219465086588,
          "average_authentication_latency_ms": 0.06109400000000001,
          "total_processing_time_seconds": 0.061094,
          "sessions_processed": 1000,
          "predictions_sample": [
            10,
            10,
            5,
            10,
            10,
            10,
            10,
            10,
            10,
            10
          ]
        },
        "KNN": {
          "throughput_sessions_per_second": 21099.272075113407,
          "average_authentication_latency_ms": 0.047395,
          "total_processing_time_seconds": 0.047395,
          "sessions_processed": 1000,
          "predictions_sample": [
            10,
            10,
            5,
            10,
            10,
            5,
            10,
            10,
            10,
            10
          ]
        },
        "NaiveBayes": {
          "throughput_sessions_per_second": 490436.4884747425,
          "average_authentication_latency_ms": 0.002039,
          "total_processing_time_seconds": 0.002039,
          "sessions_processed": 1000,
          "predictions_sample": [
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10
          ]
        },
        "MLP": {
          "throughput_sessions_per_second": 314960.6299212599,
          "average_authentication_latency_ms": 0.003175,
          "total_processing_time_seconds": 0.003175,
          "sessions_processed": 1000,
          "predictions_sample": [
            10,
            10,
            5,
            10,
            10,
            10,
            10,
            10,
            10,
            10
          ]
        },
        "AdaptiveKNN": {
          "throughput_sessions_per_second": 26034.20895056104,
          "average_authentication_latency_ms": 0.038411,
          "total_processing_time_seconds": 0.038411,
          "sessions_processed": 1000,
          "predictions_sample": [
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10
          ]
        },
        "AdaptiveRandomForest": {
          "throughput_sessions_per_second": 58561.724057156236,
          "average_authentication_latency_ms": 0.017076,
          "total_processing_time_seconds": 0.017076,
          "sessions_processed": 1000,
          "predictions_sample": [
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10,
            10
          ]
        }
      },
      "fastest_model": null,
      "fastest_time_ms": Infinity
    }
  },
  "system_info": {
    "python_version": "3.13.1 (v3.13.1:06714517797, Dec  3 2024, 14:00:22) [Clang 15.0.0 (clang-1500.3.9.4)]",
    "platform": "posix",
    "working_directory": "/Users/knight/Apps/trust_engine_app"
  }
}